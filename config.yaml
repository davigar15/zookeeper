options:
  client-port:
    description: Zookeeper client port
    type: int
    default: 2181
  server-port:
    description: Zookeeper server port
    type: int
    default: 2888
  leader-port:
    description: Zookeeper leader-election port
    type: int
    default: 3888
  zookeeper_image_path:
    type: string
    default: zookeeper:3.6.1
    description: The docker image to install.
  zookeeper_image_username:
    type: string
    description: |
      The username for accessing the registry specified in zookeeper_image_path.
    default: ""
  zookeeper_image_password:
    type: string
    description: |
      The password associated with zookeeper_image_username for accessing the registry specified in zookeeper_image_path.
    default: ""
  tick-time:
    description: |
      The length of a single tick, which is the basic time unit used by ZooKeeper,
      as measured in milliseconds. It is used to regulate heartbeats, and timeouts.
      For example, the minimum session timeout will be two ticks.
    type: int
    default: 2000
  init-limit:
    description: |
      Amount of time, in ticks (see tickTime), to allow followers to connect
      and sync to a leader. Increased this value as needed, 
      if the amount of data managed by ZooKeeper is large.
    type: int
    default: 5
  sync-limit:
    description: |
      Amount of time, in ticks (see tickTime), to allow followers to sync
      with ZooKeeper. If followers fall too far behind a leader,they will be dropped.
    type: int
    default: 2
  max-client-cnxns:
    description: |
      Limits the number of concurrent connections (at the socket level) 
      that a single client, identified by IP address, may make to a single member 
      of the ZooKeeper ensemble.
    type: int
    default: 60
  standalone-enabled:
    description: |
      Prior to 3.5.0, one could run ZooKeeper in Standalone mode or in a Distributed mode.
      These are separate implementation stacks, and switching between them during run time
      is not possible. By default (for backward compatibility) standaloneEnabled is set to true.
      The consequence of using this default is that if started with a single server the ensemble
      will not be allowed to grow, and if started with more than one server it will not be 
      allowed to shrink to contain fewer than two participants.
    type: boolean
    default: true
  adminserver-enabled:
    description: |
      New in 3.5.0: The AdminServer is an embedded Jetty server that provides
      an HTTP interface to the four letter word commands. 
      By default, the server is started on port 8080, and commands are issued
      by going to the URL "/commands/[command name]",
      e.g., http://localhost:8080/commands/stat.
    type: boolean
    default: true
  autopurge-purgeinterval:
    description: |
      The time interval in hours for which the purge task has to be triggered.
      Set to a positive integer (1 and above) to enable the auto purging.
    type: int
    default: 0
  autopurge-snapretaincount:
    description: |
      When enabled, ZooKeeper auto purge feature retains the
      autopurge.snapRetainCount most recent snapshots and the corresponding
      transaction logs in the dataDir and dataLogDir respectively and deletes the rest.
      Defaults to 3. Minimum value is 3.
    type: int
    default: 3
  4lw-commands-whitelist:
    description: |
      A list of comma separated Four Letter Words commands that user wants to use.
      A valid Four Letter Words command must be put in this list else
      ZooKeeper server will not enable the command.
      By default the whitelist only contains "srvr" command which zkServer.sh uses.
      The rest of four letter word commands are disabled by default.
    type: string
    default: srvr
  cfg-extra:
    description: |
      Not every Zookeeper configuration setting is exposed via the environment
      variables listed above. These variables are only meant to cover minimum 
      configuration keywords and some often changing options. If mounting your 
      custom config file as a volume doesn't work for you, consider using 
      ZOO_CFG_EXTRA environment variable. You can add arbitrary configuration 
      parameters to Zookeeper configuration file using this variable.
    type: string
    default: ""
  jvmflags:
    description: |
      Many of the Zookeeper advanced configuration options can be set there using 
      Java system properties in the form of -Dproperty=value. For example, you can 
      use Netty instead of NIO (default option) as a server communication framework:
      $ docker run --name some-zookeeper --restart always -e JVMFLAGS="-Dzookeeper.serverCnxnFactory=org.apache.zookeeper.server.NettyServerCnxnFactory" zookeeper
      See Advanced Configuration for the full list of supported Java system properties.
      Another example use case for the JVMFLAGS is setting a maximum JWM heap size of 1 GB:
      $ docker run --name some-zookeeper --restart always -e JVMFLAGS="-Xmx1024m" zookeeper
    type: string
    default: ""
  log4j-prop:
    description: TODO
    type: string
    default: ""
  heap:
    description: Heap memory
    type: string
    default: 512M
  max-session-timeout:
    description: Max session timeout
    type: int
    default: 40000
  min-session-timeout:
    description: Min session timeout
    type: int
    default: 4000
  log4j_prop:
    description: Log level
    type: string
    default: INFO,ROLLINGFILE
